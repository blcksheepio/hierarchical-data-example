version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  neo4j:
    driver: ${VOLUMES_DRIVER}
  phpmyadmin:
    driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: ${DOCKER_COMPOSE_CONTAINER_PATH}/workspace
        args:
          - PHP_VERSION=${PHP_VERSION}
          - PUID=${WORKSPACE_PUID}
          - USER_NAME=${WORKSPACE_USER_NAME}
          - PGID=${WORKSPACE_PGID}
          - USER_GROUP_NAME=${WORKSPACE_USER_GROUP_NAME}
          - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
          - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
          - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
          - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
          - TIMEZONE=${WORKSPACE_TIMEZONE}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      tty: true
      environment:
        - PATH=~/.composer/vendor/bin:${PATH}
      depends_on:
        - postgres
        - pgadmin
        - redis
        - neo4j
      networks:
        - frontend
        - backend

### PHP-FPM ###############################################
    php-fpm:
      build:
        context: ${DOCKER_COMPOSE_CONTAINER_PATH}/php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
          - TIMEZONE=${PHP_FPM_TIMEZONE}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      depends_on:
        - postgres
        - pgadmin
        - redis
        - neo4j
      networks:
        - backend

### NGINX Server #########################################
    nginx:
      build:
        context: ${DOCKER_COMPOSE_CONTAINER_PATH}/nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### Blackfire ########################################
    blackfire:
      image: blackfire/blackfire
      environment:
        - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
        - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      networks:
        - backend

### PostgreSQL ###########################################
    postgres:
      build: ${DOCKER_COMPOSE_CONTAINER_PATH}/postgres
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
        - backend

### pgAdmin ##############################################
    pgadmin:
      build: ${DOCKER_COMPOSE_CONTAINER_PATH}/pgadmin
      ports:
        - "5050:5050"
      volumes:
        - ${DATA_PATH_HOST}/pgadmin-backup:/var/lib/pgadmin/storage/pgadmin4
      depends_on:
        - postgres
      networks:
        - frontend
        - backend

### Neo4j ################################################
    neo4j:
      build: ${DOCKER_COMPOSE_CONTAINER_PATH}/neo4j
      ports:
        - "7474:7474"
        - "1337:1337"
      environment:
        - NEO4J_AUTH=default:secret
      volumes:
        - ${DATA_PATH_HOST}/neo4j:/var/lib/neo4j/data
      networks:
        - backend

### Redis ################################################
    redis:
      build: ${DOCKER_COMPOSE_CONTAINER_PATH}/redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend